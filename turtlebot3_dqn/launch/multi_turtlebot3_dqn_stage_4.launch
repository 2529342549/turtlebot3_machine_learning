<launch>
  <arg name="stage" default="4"/>
  <param name="stage_number"  value="$(arg stage)"/>
  <node pkg="turtlebot3_dqn" type="multi_turtlebot3_dqn_stage_4" name="multi_turtlebot3_dqn_stage_4" output="screen" />

  <!-- 广播以map为坐标系 的tb3_0的姿态信息 -->
  <node name="tb3_0_tf_broadcaster" pkg="turtlebot3_dqn" type="tf_broadcaster.py" respawn="false" >
    <param name="robot" type="string" value="tb3_0" />
  </node>

  <!-- 广播以map为坐标系 的tb3_1的姿态信息 -->
  <node name="tb3_1_tf_broadcaster" pkg="turtlebot3_dqn" type="tf_broadcaster.py" respawn="false"  output="screen" >
    <param name="robot" type="string" value="tb3_1" />
  </node>

  <node pkg="turtlebot3_dqn" type="combination_obstacle_1" name="combination_obstacle_1" output="screen" />
  <node pkg="turtlebot3_dqn" type="combination_obstacle_2" name="combination_obstacle_2" output="screen" />

  <!-- 
    启动监听节点，监听robot1和robot2的坐标，得到以robot2为原点的robot1的姿态信息
    计算robot2的角速度和线速度，将/robot2/cmd_vel topic发布出去，从而让robot2跟随robot1
  -->
  <node name="robot1_pointer" pkg="turtlebot3_dqn" type="second_tb3.py" respawn="false"  output="screen"/>

</launch>
